#+TITLE: cloudstrap-azure
#+LATEX: \pagebreak

* Overview

  ~cloudstrap-azure~ deploys SCF to ACS.

* Prerequisites

  - Logged in to Azure via ~az login~ at least once.

* Installation

  #+BEGIN_SRC shell
    gem install cloudstrap-azure --pre
  #+END_SRC

** Trusted Installation

   =cloudstrap-azure= is cryptographically signed. You can verify that it hasn't
   been tampered with (and really should, since it acts on your Azure account
   with your credentials).

   Assuming you have trusted the certificate, you can perform a trusted installation like so:

   #+BEGIN_SRC shell
     gem install cloudstrap-azure --pre --trust-policy MediumSecurity
   #+END_SRC

   Using =bundler=, the process is similar:

   #+BEGIN_SRC shell
     bundle --trust-policy MediumSecurity
   #+END_SRC

*** Why MediumSecurity?

    =MediumSecurity= requires valid signatures on *signed* gems, but allows
    unsigned dependencies. =cloudstrap-azure= has several dependencies, and not
    all of them are signed. Using =HighSecurity= will fail unless *all*
    dependencies are signed.

*** Trusting the signing certificate

    A copy of the public key is included in the repository for verification.
    Assuming you've cloned the repository to =./cloudstrap-azure=, you can add
    it to your list of trusted keys like so:

    #+BEGIN_SRC shell
      gem cert --add ./cloudstrap-azure/trust/certificates/colstrom.cert.pem
    #+END_SRC

    You can also fetch the key directly from GitHub.

    For modern shells like =fish=, use the following:

    #+BEGIN_SRC shell
      gem cert --add (curl -s https://raw.githubusercontent.com/colstrom/cloudstrap-azure/master/trust/certificates/colstrom.cert.pem | psub)
    #+END_SRC

    For vintage shells like =bash=, use the following:

    #+BEGIN_SRC shell
      gem cert add <(curl -s https://raw.githubusercontent.com/colstrom/cloudstrap-azure/master/trust/certificates/colstrom.cert.pem)
    #+END_SRC

* Commands

** cloudstrap-azure environment

   Deals with authentication for the Azure and Microsoft Graph services.

   - Given no arguments, prints JSON containing access tokens to STDOUT.
   - Given some arguments, sets up an environment containing access tokens, then execs into its arguments.

** cloudstrap-azure configure

   An interactive configuration tool for ~cloudstrap-azure~. Requires access
   tokens in the environment, as produced by the ~environment~ command.

** cloudstrap-azure deploy

   A tool for deploying SCF on ACS. Requires access tokens and configuration.

* License

  ~cloudstrap-azure~ is available under the [[https://tldrlegal.com/license/mit-license][MIT License]]. See ~LICENSE.txt~ for the
  full text.

* Contributors

  - [[https://colstrom.github.io/][Chris Olstrom]] | [[mailto:chris@olstrom.com][e-mail]] | [[https://twitter.com/ChrisOlstrom][Twitter]]
